generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model chargingPoint {
  chargingPointID Int                   @id @default(autoincrement())
  status          chargingPoint_status?
  locationID      Int?
  location        location?             @relation(fields: [locationID], references: [locationID], onDelete: Cascade, map: "chargingPoint_ibfk_1")
  users           users[]

  @@index([locationID], map: "charging_point_location_fk")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model keyValues {
  maximumPendingTime DateTime @db.Time(0)
  maximumChargeTime  DateTime @db.Time(0)
  checkQueueInterval DateTime @db.Time(0)

  @@id([maximumPendingTime, maximumChargeTime, checkQueueInterval])
  @@ignore
}

model location {
  locationID    Int             @id @default(autoincrement())
  name          String?         @db.VarChar(255)
  wattage       Decimal?        @db.Decimal(5, 2)
  lat           Decimal?        @db.Decimal(10, 8)
  lng           Decimal?        @db.Decimal(10, 8)
  chargingPoint chargingPoint[]
  queue         queue[]
}

model queue {
  locationID     Int
  userID         Int
  queueEntryTime DateTime @default(now()) @db.Timestamp(0)
  location       location @relation(fields: [locationID], references: [locationID], onDelete: Cascade, map: "queue_ibfk_2")
  users          users    @relation(fields: [userID], references: [id], onDelete: Cascade, map: "queue_ibfk_1")

  @@id([locationID, userID])
  @@index([userID], map: "queue_users_fk")
}

model users {
  id               Int                    @id @default(autoincrement())
  email            String?                @db.VarChar(255)
  permissionLevel  users_permissionLevel? @default(USER)
  status           users_status?          @default(IDLE)
  pendingStartTime DateTime               @default(now()) @db.Timestamp(0)
  chargePointID    Int?
  queue            queue[]
  chargingPoint    chargingPoint?         @relation(fields: [chargePointID], references: [chargingPointID], onDelete: Cascade, map: "users_ibfk_1")

  @@index([chargePointID], map: "user_chargePoint_fk")
}

enum users_permissionLevel {
  ADMIN
  USER
  SUPERADMIN
}

enum users_status {
  WAITING
  CHARGING
  IDLE
  PENDING
}

enum chargingPoint_status {
  IDLE
  BROKEN
  CHARGING
  RESERVED
}
